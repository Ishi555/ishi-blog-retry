---
import config from "charm:config";
if (!config.giscus)
  throw new Error("'config.giscus' is 'undefined' or 'null'.");
---

<section class="giscus"></section>

<style>
  .giscus {
    margin-top: 3rem;
    margin-bottom: 2rem;
  }
</style>

<script
  is:inline
  data-astro-rerun
  src="https://giscus.app/client.js"
  data-repo={config.giscus.repo}
  data-repo-id={config.giscus.repoId}
  data-category={config.giscus.category}
  data-category-id={config.giscus.categoryId}
  data-mapping={config.giscus.mapping}
  data-strict={config.giscus.strict ? "1" : "0"}
  data-reactions-enabled={config.giscus.reactions ? "1" : "0"}
  data-emit-metadata={config.giscus.emitMetadata ? "1" : "0"}
  data-input-position={config.giscus.inputPosition}
  data-theme="preferred_color_scheme"
  data-lang={config.lang}
  data-loading="lazy"
  crossorigin="anonymous"
  async></script>

<script
  is:inline
  data-astro-rerun
  define:vars={{
    light: config.giscus.theme?.light ?? "light",
    dark: config.giscus.theme?.dark ?? "dark",
  }}
>
  function updateGiscusTheme() {
    const theme = document.documentElement.classList.contains("dark")
      ? dark
      : light;

    function findIframe() {
      return new Promise((resolve) => {
        const checkIframe = () => {
          const iframe = document.querySelector("iframe.giscus-frame");
          if (iframe) resolve(iframe);
          else setTimeout(checkIframe, 250);
        };
        checkIframe();
      });
    }

    function waitForIframeLoad(iframe) {
      return new Promise((resolve) => {
        if (
          iframe.contentWindow &&
          (iframe.contentDocument?.readyState === "complete" ||
            iframe.contentDocument === null)
        ) {
          resolve(iframe);
        } else {
          iframe.addEventListener("load", () => resolve(iframe), {
            once: true,
          });
        }
      });
    }

    findIframe()
      .then(waitForIframeLoad)
      .then((iframe) => {
        iframe.contentWindow.postMessage(
          { giscus: { setConfig: { theme } } },
          "https://giscus.app",
        );
      })
      .catch((error) => {
        console.warn("Error updating giscus theme:", error);
      });
  }
  new MutationObserver(updateGiscusTheme).observe(document.documentElement, {
    attributes: true,
    attributeFilter: ["class"],
  });
  window.addEventListener("DOMContentLoaded", updateGiscusTheme);
</script>
