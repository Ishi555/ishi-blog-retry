---
// modified from: https://codepen.io/YusukeNakaya/pen/XyOaBj
let {
  count = 5,
  shootingTime = "3000ms",
  starColor = "var(--charm-highlight-color)", // rgba(95, 145, 255, 1)
  starTailColor = "rgba(0, 0, 255, 0)",
} = Astro.props;
---

<div
  class="shooting-star-container"
  aria-hidden="true"
  aria-label="shooting stars animation"
>
  <div class="night">
    {
      Array.from({ length: count }).map((_, i) => (
        <div
          class="shooting-star"
          style={`--index: ${i + 1}; --delay: ${Math.floor(Math.random() * 9999 + 1000)}ms; --top-offset: ${Math.floor(Math.random() * 400 - 200)}px; --left-offset: ${Math.floor(Math.random() * 300)}px;`}
        />
      ))
    }
  </div>
</div>

<style define:vars={{ shootingTime, starColor, starTailColor }}>
  /* stylelint-disable custom-property-pattern */

  .shooting-star-container {
    position: absolute;
    top: -4em;
    left: -4em;
    width: 90%;
    height: 70%;
    pointer-events: none;
    z-index: -1;
    opacity: 0.7;
  }

  .night {
    position: relative;
    width: 100%;
    height: 100%;
    transform: rotateZ(45deg);
  }

  .shooting-star {
    position: absolute;
    top: calc(50% - var(--top-offset));
    left: calc(50% - var(--left-offset));
    height: 2px;
    background: linear-gradient(-45deg, var(--starColor), var(--starTailColor));
    border-radius: 999px;
    filter: drop-shadow(0 0 6px rgba(105, 155, 255, 1));
    animation:
      tail var(--shootingTime) ease-in-out infinite,
      shooting var(--shootingTime) ease-in-out infinite;
    animation-delay: var(--delay);
    will-change: transform, width;
  }

  .shooting-star::before,
  .shooting-star::after {
    content: "";
    position: absolute;
    top: calc(50% - 1px);
    right: 0;
    height: 2px;
    background: linear-gradient(
      -45deg,
      var(--starTailColor),
      var(--starColor),
      var(--starTailColor)
    );
    transform: translateX(50%);
    border-radius: 100%;
    animation: shining var(--shootingTime) ease-in-out infinite;
    animation-delay: var(--delay);
    will-change: transform, width;
  }

  .shooting-star::before {
    transform: translateX(50%) rotateZ(45deg);
  }

  .shooting-star::after {
    transform: translateX(50%) rotateZ(-45deg);
  }

  @keyframes tail {
    0% {
      width: 0;
    }

    30% {
      width: 100px;
    }

    100% {
      width: 0;
    }
  }

  @keyframes shining {
    0% {
      width: 0;
    }

    50% {
      width: 30px;
    }

    100% {
      width: 0;
    }
  }

  @keyframes shooting {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(300px);
    }
  }
</style>
